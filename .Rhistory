area <- areas[p]
rt <- msobject[[mslevel]][[cE]]$rt[start:end][msobject[[mslevel]][[cE]]$int[start:end] == max_int]
minrt <- min(msobject[[mslevel]][[cE]]$rt[start:end])
maxrt <- max(msobject[[mslevel]][[cE]]$rt[start:end])
peakid <- p
peaklist <- rbind(peaklist,
data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = p, stringsAsFactors = FALSE,
row.names = 6))
}
peaklist <- peaklist[order(peaklist$int, decreasing = TRUE),]
peaklist$peakID <- paste(paste(mslevel, cE, sep="_"), peaklist$peakID, sep="_")
msobject[[mslevel]][[cE]]$peak <- paste(paste(mslevel, cE, sep="_"), msobject[[mslevel]][[cE]]$peak, sep="_")
} else {
stop("No peaks found")
}
peaklist <- data.frame()
if (maxit > 0){
for (p in 1:nrow( msobject$processing[[mslevel]]$peakIndex[[cE]])){
start <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,1]
end <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,2]
mz <- mean(msobject[[mslevel]][[cE]]$mz[start:end])
# mz <- weighted.mean(msobject[[mslevel]][[cE]]$mz[start:end],
#                     msobject[[mslevel]][[cE]]$int[start:end])
max_int <- max(msobject[[mslevel]][[cE]]$int[start:end])
sumint <- sum(msobject[[mslevel]][[cE]]$int[start:end])
area <- areas[p]
rt <- msobject[[mslevel]][[cE]]$rt[start:end][msobject[[mslevel]][[cE]]$int[start:end] == max_int]
minrt <- min(msobject[[mslevel]][[cE]]$rt[start:end])
maxrt <- max(msobject[[mslevel]][[cE]]$rt[start:end])
peakid <- p
peaklist <- rbind(peaklist,
data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = p, stringsAsFactors = FALSE,
row.names = peakID))
}
peaklist <- peaklist[order(peaklist$int, decreasing = TRUE),]
peaklist$peakID <- paste(paste(mslevel, cE, sep="_"), peaklist$peakID, sep="_")
msobject[[mslevel]][[cE]]$peak <- paste(paste(mslevel, cE, sep="_"), msobject[[mslevel]][[cE]]$peak, sep="_")
} else {
stop("No peaks found")
}
p
peaklist <- data.frame()
start <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,1]
end <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,2]
mz <- mean(msobject[[mslevel]][[cE]]$mz[start:end])
# mz <- weighted.mean(msobject[[mslevel]][[cE]]$mz[start:end],
#                     msobject[[mslevel]][[cE]]$int[start:end])
max_int <- max(msobject[[mslevel]][[cE]]$int[start:end])
sumint <- sum(msobject[[mslevel]][[cE]]$int[start:end])
area <- areas[p]
rt <- msobject[[mslevel]][[cE]]$rt[start:end][msobject[[mslevel]][[cE]]$int[start:end] == max_int]
minrt <- min(msobject[[mslevel]][[cE]]$rt[start:end])
maxrt <- max(msobject[[mslevel]][[cE]]$rt[start:end])
peakid <- p
peaklist <- rbind(peaklist,
data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = p, stringsAsFactors = FALSE,
row.names = peakID))
peaklist
peaklist <- rbind(peaklist,
c(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = p))
peaklist
peaklist <- rbind(peaklist,
data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = p))
peaklist <- data.frame()
peaklist <- rbind(peaklist,
data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = p))
peaklist
peaklist <- rbind(peaklist,
data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = peakID))
peaklist
peaklist <- data.frame()
start <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,1]
end <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,2]
mz <- mean(msobject[[mslevel]][[cE]]$mz[start:end])
# mz <- weighted.mean(msobject[[mslevel]][[cE]]$mz[start:end],
#                     msobject[[mslevel]][[cE]]$int[start:end])
max_int <- max(msobject[[mslevel]][[cE]]$int[start:end])
sumint <- sum(msobject[[mslevel]][[cE]]$int[start:end])
area <- areas[p]
rt <- msobject[[mslevel]][[cE]]$rt[start:end][msobject[[mslevel]][[cE]]$int[start:end] == max_int]
minrt <- min(msobject[[mslevel]][[cE]]$rt[start:end])
maxrt <- max(msobject[[mslevel]][[cE]]$rt[start:end])
peakid <- p
peaklist <- rbind(peaklist,
data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = peakid))
peaklist
peaklist <- rbind(peaklist,
c(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = p))
peaklist
peaklist <- data.frame()
for (p in 1:nrow( msobject$processing[[mslevel]]$peakIndex[[cE]])){
start <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,1]
end <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,2]
mz <- mean(msobject[[mslevel]][[cE]]$mz[start:end])
# mz <- weighted.mean(msobject[[mslevel]][[cE]]$mz[start:end],
#                     msobject[[mslevel]][[cE]]$int[start:end])
max_int <- max(msobject[[mslevel]][[cE]]$int[start:end])
sumint <- sum(msobject[[mslevel]][[cE]]$int[start:end])
area <- areas[p]
rt <- msobject[[mslevel]][[cE]]$rt[start:end][msobject[[mslevel]][[cE]]$int[start:end] == max_int]
minrt <- min(msobject[[mslevel]][[cE]]$rt[start:end])
maxrt <- max(msobject[[mslevel]][[cE]]$rt[start:end])
peakid <- p
peaklist <- rbind(peaklist,
c(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = p))
}
peaklist <- peaklist[order(peaklist$int, decreasing = TRUE),]
peaklist$int
peaklist
peaklist <- data.frame()
for (p in 1:nrow( msobject$processing[[mslevel]]$peakIndex[[cE]])){
start <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,1]
end <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,2]
mz <- mean(msobject[[mslevel]][[cE]]$mz[start:end])
# mz <- weighted.mean(msobject[[mslevel]][[cE]]$mz[start:end],
#                     msobject[[mslevel]][[cE]]$int[start:end])
max_int <- max(msobject[[mslevel]][[cE]]$int[start:end])
sumint <- sum(msobject[[mslevel]][[cE]]$int[start:end])
area <- areas[p]
rt <- msobject[[mslevel]][[cE]]$rt[start:end][msobject[[mslevel]][[cE]]$int[start:end] == max_int]
minrt <- min(msobject[[mslevel]][[cE]]$rt[start:end])
maxrt <- max(msobject[[mslevel]][[cE]]$rt[start:end])
peakid <- p
peaklist <- rbind(peaklist,
data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = p))
}
peaklist
peaklist <- peaklist[order(peaklist$int, decreasing = TRUE),]
peaklist$peakID <- paste(paste(mslevel, cE, sep="_"), peaklist$peakID, sep="_")
msobject[[mslevel]][[cE]]$peak <- paste(paste(mslevel, cE, sep="_"), msobject[[mslevel]][[cE]]$peak, sep="_")
msobject$peaklist[[mslevel]][[cE]] <- peaklist
msobject$peaklist[[mslevel]][[cE]]
do.call(rbind, msobject$peaklist[["MS1"]])
msobject$peaklist$MS1 <- do.call(rbind, msobject$peaklist[["MS1"]])
rownames(msobject$peaklist$MS1) <- msobject$peaklist$MS1$peakID
any(duplicated(peaklist$peakID))
which(duplicated(peaklist$peakID))
peaklist$peakID[898]
peaklist$peakID[2519]
which(peaklist$peakID == "MS1_7_857")
p<-897
start <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,1]
end <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,2]
start
end
mz
p<-898
start <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,1]
end <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,2]
mz <- mean(msobject[[mslevel]][[cE]]$mz[start:end])
mz
end
start
peakID[p]
peaklist[897:898,]
msobject$processing[[mslevel]]$peakIndex[[cE]][897:898,]
msobject[[mslevel]][[cE]]$mz[start:end]
p
p<-897
start <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,1]
end <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,2]
msobject[[mslevel]][[cE]]$mz[start:end]
p
start <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,1]
end <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,2]
mz <- mean(msobject[[mslevel]][[cE]]$mz[start:end])
# mz <- weighted.mean(msobject[[mslevel]][[cE]]$mz[start:end],
#                     msobject[[mslevel]][[cE]]$int[start:end])
max_int <- max(msobject[[mslevel]][[cE]]$int[start:end])
sumint <- sum(msobject[[mslevel]][[cE]]$int[start:end])
area <- areas[p]
rt <- msobject[[mslevel]][[cE]]$rt[start:end][msobject[[mslevel]][[cE]]$int[start:end] == max_int]
minrt <- min(msobject[[mslevel]][[cE]]$rt[start:end])
maxrt <- max(msobject[[mslevel]][[cE]]$rt[start:end])
peakid <- p
data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = p)
p<-898
start <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,1]
end <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,2]
mz <- mean(msobject[[mslevel]][[cE]]$mz[start:end])
# mz <- weighted.mean(msobject[[mslevel]][[cE]]$mz[start:end],
#                     msobject[[mslevel]][[cE]]$int[start:end])
max_int <- max(msobject[[mslevel]][[cE]]$int[start:end])
sumint <- sum(msobject[[mslevel]][[cE]]$int[start:end])
area <- areas[p]
rt <- msobject[[mslevel]][[cE]]$rt[start:end][msobject[[mslevel]][[cE]]$int[start:end] == max_int]
minrt <- min(msobject[[mslevel]][[cE]]$rt[start:end])
maxrt <- max(msobject[[mslevel]][[cE]]$rt[start:end])
peakid <- p
data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = p)
order(peaklist$int
)
nrow( msobject$processing[[mslevel]]$peakIndex[[cE]])
peaklist <- data.frame()
# create peaklist
maxit <- max(msobject[[mslevel]][[cE]]$peak)
for (p in 1:nrow( msobject$processing[[mslevel]]$peakIndex[[cE]])){
start <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,1]
end <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,2]
mz <- mean(msobject[[mslevel]][[cE]]$mz[start:end])
# mz <- weighted.mean(msobject[[mslevel]][[cE]]$mz[start:end],
#                     msobject[[mslevel]][[cE]]$int[start:end])
max_int <- max(msobject[[mslevel]][[cE]]$int[start:end])
sumint <- sum(msobject[[mslevel]][[cE]]$int[start:end])
area <- areas[p]
rt <- msobject[[mslevel]][[cE]]$rt[start:end][msobject[[mslevel]][[cE]]$int[start:end] == max_int]
minrt <- min(msobject[[mslevel]][[cE]]$rt[start:end])
maxrt <- max(msobject[[mslevel]][[cE]]$rt[start:end])
peakid <- p
peaklist <- rbind(peaklist,
data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = peakid))
}
peaklist[897:898,]
head(peaklist)
any(duplicated(peaklist$peakID))
length(areas)
maxit
# create peaklist
maxit <- max(msobject[[mslevel]][[cE]]$peak)
maxit
msobject[[mslevel]][[cE]]
# create peaklist
maxit <- nrow(msobject$processing[[mslevel]]$peakIndex[[cE]])
maxit
peaklist <- data.frame()
if (maxit > 0){
for (p in 1:nrow(msobject$processing[[mslevel]]$peakIndex[[cE]])){
start <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,1]
end <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,2]
mz <- mean(msobject[[mslevel]][[cE]]$mz[start:end])
# mz <- weighted.mean(msobject[[mslevel]][[cE]]$mz[start:end],
#                     msobject[[mslevel]][[cE]]$int[start:end])
max_int <- max(msobject[[mslevel]][[cE]]$int[start:end])
sumint <- sum(msobject[[mslevel]][[cE]]$int[start:end])
area <- areas[p]
rt <- msobject[[mslevel]][[cE]]$rt[start:end][msobject[[mslevel]][[cE]]$int[start:end] == max_int]
minrt <- min(msobject[[mslevel]][[cE]]$rt[start:end])
maxrt <- max(msobject[[mslevel]][[cE]]$rt[start:end])
peakid <- p
peaklist <- rbind(peaklist,
data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = peakid))
}
peaklist <- peaklist[order(peaklist$int, decreasing = TRUE),]
peaklist$peakID <- paste(paste(mslevel, cE, sep="_"), peaklist$peakID, sep="_")
msobject[[mslevel]][[cE]]$peak <- paste(paste(mslevel, cE, sep="_"), msobject[[mslevel]][[cE]]$peak, sep="_")
} else {
stop("No peaks found")
}
msobject <- readMSfile(file)
if (polarity == "positive"){pol <- "+"}else{pol <- "-"}
if (length(unique(msobject$metaData$scansMetadata$polarity)) > 1){
msobject$MS1 <- msobject$MS1[msobject$metaData$scansMetadata$polarity ==
polarity,]
if ("MS2" %in% names(msobject)){
msobject$MS2 <- lapply(msobject$MS2, function(x) x[msobject$metaData$scansMetadata$polarity ==
pol,])
}
msobject$metaData$scansMetaData <-
msobject$metaData$scansMetaData[msobject$metaData$scansMetadata$polarity ==
pol,]
} else if (length(unique(msobject$metaData$scansMetadata$polarity)) == 1){
if (unique(msobject$metaData$scansMetadata$polarity) != pol){
stop(paste(c("Data was acquired in ESI",
unique(msobject$metaData$scansMetadata$polarity),
" mode"), collapse = ""))
}
}
msobject$metaData$generalMetadata$polarity <- polarity
cE
msobject <- partitioning(msobject, dmzagglom = dmzagglom1, drtagglom = drtagglom1,
minpeak = minpeak1, mslevel = "MS1", cE = cE)
msobject
head(msobject$MS1$7)
head(msobject$MS1$'7')
msobject <- partitioning(msobject, dmzagglom = dmzagglom1, drtagglom = drtagglom1,
minpeak = minpeak1, mslevel = "MS1", cE = cE)
head(msobject$MS1$'7')
head(msobject$MS1$'7',50)
head(msobject$MS1$'7',200)
unique(msobject$MS1$'7'$part)
msobject <- clustering(msobject, dmzagglom = dmzagglom1, drtclust = drtclust1,
minpeak = minpeak1, mslevel = "MS1", cE = cE)
head(msobject$MS1$'7')
msobject$processing[[mslevel]]$parameters$drtminpeak <- drtminpeak
msobject$processing[[mslevel]]$parameters$drtmaxpeak <- drtmaxpeak
msobject$processing[[mslevel]]$parameters$drtgap <- drtgap
msobject$processing[[mslevel]]$parameters$recurs <- recurs
msobject$processing[[mslevel]]$parameters$weight <- weight
msobject$processing[[mslevel]]$parameters$ended <- ended
msobject$processing[[mslevel]]$parameters$sb <- sb
msobject$processing[[mslevel]]$parameters$sn <- sn
msobject$processing[[mslevel]]$parameters$minint <- minint
nrow(msobject[[mslevel]][[cE]])
msobject[[mslevel]][[cE]]$id <- 1:nrow(msobject[[mslevel]][[cE]])
level <- as.numeric(gsub("MS", "", mslevel))
level
startat <- 0
npeaks <- 0
areas <- c()
roworder <- 1:nrow(msobject[[mslevel]][[cE]])
roworder
for (k in 1:nrow(msobject$processing[[mslevel]]$clustIndex[[cE]])) {
if (msobject$processing[[mslevel]]$clustIndex[[cE]][k, 3] >= minpeak){
start <- msobject$processing[[mslevel]]$clustIndex[[cE]][k,1]
end <- msobject$processing[[mslevel]]$clustIndex[[cE]][k,2]
# Fill rt gaps < drtgap: gapfill function from enviPick
out1 <- .Call("gapfill",
as.numeric(msobject[[mslevel]][[cE]]$rt[start:end]),
as.numeric(msobject[[mslevel]][[cE]]$int[start:end]),
as.integer(order(msobject[[mslevel]][[cE]]$rt[start:end], decreasing = FALSE)),
as.numeric(msobject[[mslevel]][[cE]]$mz[start:end]),
as.numeric(msobject[[mslevel]][[cE]]$id[start:end]),
as.numeric(msobject$metaData$scansMetadata$retentionTime[msobject$metaData$scansMetadata$msLevel == level & msobject$metaData$scansMetadata$collisionEnergy == cE]),
as.numeric(drtgap),
PACKAGE = "LipidMS")
out1 <- matrix(out1,ncol=10)
colnames(out1)<-c("m/z","intens","RT","index","intens_filt","1pick","pickcrit","baseline","intens_corr","2pick")
# Filter step: yet to be implemented
out1[, 5] <- out1[, 2]
# Peak detection, baseline substraction and 2nd peak detection
out2 <- .Call("pickpeak",
as.numeric(out1),
as.numeric(drtminpeak),
as.numeric(drtmaxpeak),
as.integer(minpeak),
as.integer(recurs),
as.numeric(weight),
as.numeric(sb),
as.numeric(sn),
as.numeric(minint),
as.numeric(msobject$processing[[mslevel]]$parameters$maxint),
as.integer(ended),
as.integer(2),
PACKAGE = "LipidMS")
out2 <- matrix(out2, ncol = 10)
colnames(out2)<-c("m/z","intens","RT","index","intens_filt","1pick","pickcrit","baseline","intens_corr","2pick");
if(!all(out2[,10] == 0)){
npeaks <- npeaks + length(unique(out2[,10]))
out2[,10] <- out2[,10] + startat
out2 <- out2[out2[,10] != startat,]
area <- tapply(out2[,9], out2[,10], sum)
areas <- c(areas, area)
peak <- as.numeric(sapply(msobject[[mslevel]][[cE]]$id[start:end], function(x) if(x %in% out2[,4]){out2[out2[,4] == x,10]} else {0}))
msobject[[mslevel]][[cE]]$peak[start:end] <- peak
roworder[start:end] <- roworder[start:end][order(peak, decreasing = FALSE)]
startat <- c(max(out2[,10]))
}
}
}
msobject[[mslevel]][[cE]] <- msobject[[mslevel]][[cE]][roworder,]
max(msobject[[mslevel]][[cE]]$peak)
any(duplicated(msobject[[mslevel]][[cE]]$peak))
head(msobject[[mslevel]][[cE]]$peak)
max(msobject[[mslevel]][[cE]]$peak)
# assign peakID
# Index of peaks: indexed function from enviPick
maxit <- max(msobject[[mslevel]][[cE]]$peak)
maxit
if(maxit > 0){
index <- .Call("indexed",
as.integer(msobject[[mslevel]][[cE]]$peak),
as.numeric(msobject[[mslevel]][[cE]]$int),
as.integer(minpeak),
as.numeric(msobject$processing[[mslevel]]$parameters$maxint),
as.integer(maxit),
PACKAGE="LipidMS")
if(any(index[,2]!=0)){
index <- index[index[,2] != 0,,drop=FALSE];
# Assign peakID: partID function from enviPick
peakID <- .Call("partID",
as.integer(index),
as.integer(length(msobject[[mslevel]][[cE]]$peak)),
PACKAGE = "LipidMS")
colnames(index) <- c("start","end","length")
# save peaks
msobject[[mslevel]][[cE]]$peak <- peakID
msobject$processing[[mslevel]]$peakIndex[[cE]] <- index
}
}
head(msobject$processing[[mslevel]]$peakIndex[[cE]])
max(msobject[[mslevel]][[cE]]$peak)
nrow(msobject$processing[[mslevel]]$peakIndex[[cE]])
# create peaklist
maxit <- nrow(msobject$processing[[mslevel]]$peakIndex[[cE]])
maxit
peaklist <- data.frame()
# create peaklist
maxit <- nrow(msobject$processing[[mslevel]]$peakIndex[[cE]])
peaklist <- data.frame()
for (p in 1:nrow( msobject$processing[[mslevel]]$peakIndex[[cE]])){
start <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,1]
end <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,2]
mz <- mean(msobject[[mslevel]][[cE]]$mz[start:end])
# mz <- weighted.mean(msobject[[mslevel]][[cE]]$mz[start:end],
#                     msobject[[mslevel]][[cE]]$int[start:end])
max_int <- max(msobject[[mslevel]][[cE]]$int[start:end])
sumint <- sum(msobject[[mslevel]][[cE]]$int[start:end])
area <- areas[p]
rt <- msobject[[mslevel]][[cE]]$rt[start:end][msobject[[mslevel]][[cE]]$int[start:end] == max_int]
minrt <- min(msobject[[mslevel]][[cE]]$rt[start:end])
maxrt <- max(msobject[[mslevel]][[cE]]$rt[start:end])
peakid <- p
if(nrow(data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = p, stringsAsFactors = FALSE)) > 1){
stop()
}
peaklist <- rbind(peaklist,
data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = p, stringsAsFactors = FALSE))
}
mz
max_int
sumint
area
rt
msobject[[mslevel]][[cE]]$rt[start:end]
msobject[[mslevel]][[cE]]$int[start:end] == max_int
rt <- mean(msobject[[mslevel]][[cE]]$rt[start:end][msobject[[mslevel]][[cE]]$int[start:end] == max_int])
rt
mean(2)
# create peaklist
maxit <- nrow(msobject$processing[[mslevel]]$peakIndex[[cE]])
peaklist <- data.frame()
if (maxit > 0){
for (p in 1:nrow( msobject$processing[[mslevel]]$peakIndex[[cE]])){
start <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,1]
end <- msobject$processing[[mslevel]]$peakIndex[[cE]][p,2]
mz <- mean(msobject[[mslevel]][[cE]]$mz[start:end])
# mz <- weighted.mean(msobject[[mslevel]][[cE]]$mz[start:end],
#                     msobject[[mslevel]][[cE]]$int[start:end])
max_int <- max(msobject[[mslevel]][[cE]]$int[start:end])
sumint <- sum(msobject[[mslevel]][[cE]]$int[start:end])
area <- areas[p]
rt <- mean(msobject[[mslevel]][[cE]]$rt[start:end][msobject[[mslevel]][[cE]]$int[start:end] == max_int])
minrt <- min(msobject[[mslevel]][[cE]]$rt[start:end])
maxrt <- max(msobject[[mslevel]][[cE]]$rt[start:end])
peakid <- p
peaklist <- rbind(peaklist,
data.frame(m.z = mz, RT = rt, int = area,
minRT = minrt, maxRT = maxrt,
peakID = p, stringsAsFactors = FALSE))
}
peaklist <- peaklist[order(peaklist$int, decreasing = TRUE),]
peaklist$peakID <- paste(paste(mslevel, cE, sep="_"), peaklist$peakID, sep="_")
msobject[[mslevel]][[cE]]$peak <- paste(paste(mslevel, cE, sep="_"), msobject[[mslevel]][[cE]]$peak, sep="_")
} else {
stop("No peaks found")
}
msobject$peaklist[[mslevel]][[cE]] <- peaklist
msobject$peaklist[[mslevel]][[cE]]
msobject$peaklist$MS1 <- do.call(rbind, msobject$peaklist[["MS1"]])
rownames(msobject$peaklist$MS1) <- msobject$peaklist$MS1$peakID
msobject$MS1 <- do.call(rbind, msobject$MS1)
msobject$MS1 <- msobject$MS1[,c("mz", "rt", "int", "peak", "Scan")]
colnames(msobject$MS1) <- c("m.z", "RT", "int", "peakID", "Scan")
msobject$MS1 <- msobject$MS1[!grepl("_0$", msobject$MS1$peakID),]
library(LipidMS)
getwd()
msobject <- dataProcessing("3-10-2021_AutoMS.mzXML", polarity = "positive",acquisitionmode = "DDA")
head(msobject$MS1)
head(msobject$peaklist$MS1)
msobject2 <- idPOS(msobject)
msobject2$results
msobject <- dataProcessing("Neg_ms2.mzXML", polarity = "negative",acquisitionmode = "DDA")
msobject2 <- idNEG(msobject)
msobject2$results
msobject$peaklist$MS1
View(msobject$peaklist$MS1)
View(msobject$metaData$scansMetadata)
msobject2 <- idNEG(msobject, ppm_precursor = 15, ppm_products = 20, rttol = 10)
msobject2$results
idPCneg(msobject)
any(msobject$metaData$scansMetadata$precursor > 840.57 & msobject$metaData$scansMetadata$precursor < 840.58)
table(msobject$metaData$scansMetadata$precursor)
msobject$metaData$scansMetadata$precursor[!is.na(msobject$metaData$scansMetadata$precursor)]
idPCneg(msobject)
idPCneg(msobject, ppm_precursor = 50, ppm_products = 50)
msobject$metaData$generalMetadata
View(msobject$metaData$scansMetadata)
setwd("H:/Maribel/Paquetes/Github/LipidMS")
